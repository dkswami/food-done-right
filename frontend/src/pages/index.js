import { useState, useEffect } from 'react'
import useDebounce from '@/hooks/useDebounce';
import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import axios from 'axios';

export default function Home() {
	const [fetchedAddress, setFetchedAddress] = useState([]);
	const [searchInput, setSearchInput] = useState('');
	const [loading, setLoading] = useState(false);
	const [outletResult, setOutletResult] = useState('');

	const debouncedSearch = useDebounce(searchInput, 1000);

	const handleSubmit = async (e) => {
		e.preventDefault();
		try {
			const response = await axios.get(`http://localhost:4000/api/v1/outlet/${searchInput}`)
			setOutletResult(response.data)
		} catch (error) {
			console.log(error)
		}
	}

	const handleChange = (e) => {
		setSearchInput(e.target.value);
	}

	const handleFetchedDataClick = (fetchedAddress) => {
		setSearchInput(fetchedAddress);
	}

	useEffect(() => {
		const getSearch = async () => {
			setLoading(true);
			const response = await axios.get(`http://www.mapquestapi.com/search/v3/prediction?key=${process.env.NEXT_PUBLIC_MAPQUEST_KEY}&collection=adminArea,poi,address,category,franchise,airport&q=${debouncedSearch}`)
			setFetchedAddress(response.data.results);
			setLoading(false)
		}
		if (debouncedSearch.length>3 && debouncedSearch) getSearch();
	}, [debouncedSearch])

	return (
		<>
			<Head>
				<title>Food done right</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className={styles.main}>
				<h1 className={styles.title}>Food Done Right</h1>				
				<form onSubmit={handleSubmit}>
					<input type="text" className={styles.textbox} placeholder="Search Address" onChange={handleChange} value={searchInput} />
					<input title="Search" value="Check Outlet" type="submit" className={styles.button} />
				</form>
				<div className={styles.fetchedresults}>
					{ loading && <p>Loading...</p>}
					{fetchedAddress.map((address, index) => {
						return (
							<div key={index} className={styles.fetchedresult} onClick={() => handleFetchedDataClick(address.displayString)}>
								{address.displayString}
							</div>
						)
					})}
				</div>
				<div className={styles.outletresult}>
					<h3>Outlet Info : {outletResult}</h3>
				</div>
				<br/>
				<p>This app will take the address and search for it's nearest outlet within the defined polygon area(as given in assets.kml).</p>
				<p>Tech stack used are Next js, Nest js, typescript in nest, debouncing, used mapquest for search & geoapi and more.</p>
				<p>You can reach me at dkswami1820@gmail.com</p>
			</main>
		</>
	)
}
